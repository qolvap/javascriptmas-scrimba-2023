<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gift App</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Rubik:wght@300&display=swap" rel="stylesheet">
    <style>
        html, body {
            margin: 0;
            padding: 0;
            font-family: 'Rubik', sans-serif;
            background-color: #5C141B;
            color: #432000;
            user-select: none;
        }

        .container {
            display: flex;
            flex-direction: column;
            max-width: 320px;
            margin: 30px auto;
            row-gap: 10px;
        }

        h1 {
            margin: 0;
            color: #FDFDFD;
            text-align: center;
        }

        img {
            width: 150px;
            margin: 0 auto;
        }

        input {
            color: #FDFDFD;
            background-color: #3A0F13;
            border: 0;
            padding: 15px;
            border-radius: 8px;
            font-size: 20px;
            text-align: center;
            font-family: 'Rubik', sans-serif;
            margin: 10px 0;
        }

        .input-fields {
            display: flex;
            column-gap: 10px;
        }

        #add-button {
            height: 50px;
            width: 50px;
            text-align: center;
            margin: 10px 0;
        }

        button {
            color: #FDFDFD;
            background-color: #AB1D2B;
            border: 0;
            padding: 15px;
            border-radius: 8px;
            font-size: 20px;
            text-align: center;
            font-family: 'Rubik', sans-serif;
        }

        button:hover {
            background-color: #432000;
            cursor: pointer;
        }

        ul {
            list-style-type: none;
            padding: 0;
            display: flex;
            flex-direction: column;
            row-gap: 10px;
        }

        ul li {
            font-size: 20px;
            background-color: #AB1D2B;
            color: #FDFDFD;
            padding: 15px;
            border-radius: 8px;
            flex-grow: 1;
            text-align: center;
            box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);
        }

        ul li:hover {
            background-color: #E33D52;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <img src="icon.png">
        <h1>Gift App</h1>
        <div class="input-fields">
            <input type="text" id="input-field" placeholder="Frode">
            <button id="add-button">â†’</button>
        </div>
        <ul id="people-list"></ul>
    </div>
    <script>
        let people = JSON.parse(localStorage.getItem("people")) || [];
        const inputFieldEl = document.getElementById("input-field");
        const addButtonEl = document.getElementById("add-button");
        const peopleListEl = document.getElementById("people-list");

        renderList(people);

        addButtonEl.addEventListener("click", addPerson);

        inputFieldEl.addEventListener("keyup", function (event) {
            if (event.key === "Enter") addPerson();
        });

        function addPerson() {
            const inputValue = inputFieldEl.value.trim();
            if (inputValue) {
                people.push(inputValue);
                saveAndRender();
            }
        }

        function saveAndRender() {
            localStorage.setItem("people", JSON.stringify(people));
            renderList(people);
            clearInputFieldEl();
        }

        function renderList(array) {
            peopleListEl.innerHTML = array.map(person => `<li>${person}</li>`).join('');
        }

        function clearInputFieldEl() {
            inputFieldEl.value = "";
        }

        peopleListEl.addEventListener("dblclick", function (event) {
            const targetPerson = event.target.textContent;
            const updatedPeople = people.filter(person => person !== targetPerson);
            people = updatedPeople;
            saveAndRender();
        });
    </script>
</body>
</html>
